#------------------------------------------------------------------------------
# SPEC CPU2017 config file for: LLVM / Linux / AMD64
#------------------------------------------------------------------------------
# 
# Usage: (1) Copy this to a new name
#             cd $SPEC/config
#             cp Example-x.cfg myname.cfg
#        (2) Change items that are marked 'EDIT' (search for it)
# 
# SPEC tested this config file with:
#    Compiler version(s):     LLVM/3.9.0
#    Operating system(s):     Linux
#    Hardware:                AMD64
#
# If your system differs, this config file might not work.
# You might find a better config file at http://www.spec.org/cpu2017/results
#
# Compiler issues: Contact your compiler vendor, not SPEC.
# For SPEC help:   http://www.spec.org/cpu2017/Docs/techsupport.html
#------------------------------------------------------------------------------


#--------- Label --------------------------------------------------------------
# Arbitrary string to tag binaries (no spaces allowed)
#                  Two Suggestions: # (1) EDIT this label as you try new ideas.
%define label test1                # (2)      Use a label meaningful to *you*.


#--------- Preprocessor -------------------------------------------------------
%ifndef %{bits}                # EDIT to control 32 or 64 bit compilation.  Or, 
%   define  bits        64     #      you can set it on the command line using:
%endif                         #      'runcpu --define bits=nn'

%ifndef %{build_ncpus}         # EDIT to adjust number of simultaneous compiles.
%   define  build_ncpus 4      #      Or, you can set it on the command line: 
%endif                         #      'runcpu --define build_ncpus=nn'

# Don't change this part.
%define  os          LINUX
%if %{bits} == 64
%   define model        -m64   
%elif %{bits} == 32
%   define model        -m32   
%else
%   error Please define number of bits - see instructions in config file
%endif
%if %{label} =~ m/ /
%   error Your label "%{label}" contains spaces.  Please try underscores instead.
%endif
%if %{label} !~ m/^[a-zA-Z0-9._-]+$/
%   error Illegal character in label "%{label}".  Please use only alphanumerics, underscore, hyphen, and period.
%endif


#--------- Global Settings ----------------------------------------------------
# For info, see:
#            https://www.spec.org/cpu2017/Docs/config.html#fieldname   
#   Example: https://www.spec.org/cpu2017/Docs/config.html#tune

#backup_config          = 0                     # Uncomment for cleaner config/ directory
flagsurl01              = $[top]/config/flags/gcc.xml
flagsurl02              = $[top]/config/flags/clang.xml
ignore_errors           = 1
iterations              = 1
label                   = %{label}-m%{bits}
line_width              = 1020
log_line_width          = 1020
makeflags               = --jobs=%{build_ncpus}
mean_anyway             = 1
output_format           = txt,html,cfg,pdf,csv

preenv                  = 1
tune                    = base

#--------- How Many CPUs? -----------------------------------------------------
# Both SPECrate and SPECspeed can test multiple chips / cores / hw threads
#    - For SPECrate,  you set the number of copies.
#    - For SPECspeed, you set the number of threads. 
# See: https://www.spec.org/cpu2017/Docs/system-requirements.html#MultipleCPUs
#
#    q. How many should I set?  
#    a. Unknown, you will have to try it and see!
#
# To get you started:
#
#     copies - This config file sets 1 copy per core (after you set the 
#              'cpucores' variable, just below).
#              Please be sure you have enough memory; if you do not, you might 
#              need to run a smaller number of copies.  See:
#              https://www.spec.org/cpu2017/Docs/system-requirements.html#memory
#
#     threads - This config file sets a starting point.  You can try adjusting it.
#               Higher thread counts are much more likely to be useful for
#               fpspeed than for intspeed.
#
#
# To do so, please adjust these; also adjust the 'numactl' lines, below

                               # EDIT to define system sizes 
%define  cpucores       4      #         number of physical cores
%define  cputhreads     8      #         number of logical cores
%define  numanodes      1      #         number of NUMA nodes for affinity

intrate,fprate:
   copies                  = %{cpucores}      
intspeed,fpspeed:
   threads                 = %{cputhreads}   

#-------- CPU binding for rate -----------------------------------------------
# When you run multiple copies for SPECrate mode, performance
# is improved if you bind the copies to specific processors.  EDIT the numactl stuff below.

intrate,fprate:
submit       = echo "$command" > run.sh ; $BIND bash run.sh

# Affinity settings:                     EDIT this section
# Please adjust these values for your 
# particular system as these settings are 
# for an 8 core, one NUMA node (-m 0) system.
bind0	= numactl -m 0 --physcpubind=0
bind1	= numactl -m 0 --physcpubind=1
bind2	= numactl -m 0 --physcpubind=2
bind3	= numactl -m 0 --physcpubind=3
bind4	= numactl -m 0 --physcpubind=4
bind5	= numactl -m 0 --physcpubind=5
bind6	= numactl -m 0 --physcpubind=6
bind7	= numactl -m 0 --physcpubind=7

# EDIT to add additional cores and NUMA nodes as necessary
# bind8	        = numactl -m 1 --physcpubind=8
# bind9	        = numactl -m 1 --physcpubind=9
# bind10	= numactl -m 1 --physcpubind=10
# bind11	= numactl -m 1 --physcpubind=11
# bind12	= numactl -m 1 --physcpubind=12
# bind13	= numactl -m 1 --physcpubind=13
# bind14	= numactl -m 1 --physcpubind=14
# bind15	= numactl -m 1 --physcpubind=15
#
# bind16	= numactl -m 2 --physcpubind=16
# bind17	= numactl -m 2 --physcpubind=17
# bind18	= numactl -m 2 --physcpubind=18
# bind19	= numactl -m 2 --physcpubind=19
# bind20	= numactl -m 2 --physcpubind=20
# bind21	= numactl -m 2 --physcpubind=21
# bind22	= numactl -m 2 --physcpubind=22
# bind23	= numactl -m 2 --physcpubind=23
#
# bind24	= numactl -m 3 --physcpubind=24
# bind25	= numactl -m 3 --physcpubind=25
# bind26	= numactl -m 3 --physcpubind=26
# bind27	= numactl -m 3 --physcpubind=27
# bind28	= numactl -m 3 --physcpubind=28
# bind29	= numactl -m 3 --physcpubind=29
# bind30	= numactl -m 3 --physcpubind=30
# bind31	= numactl -m 3 --physcpubind=31
#
# bind32	= numactl -m 4 --physcpubind=32
# bind33	= numactl -m 4 --physcpubind=33
# bind34	= numactl -m 4 --physcpubind=34
# bind35	= numactl -m 4 --physcpubind=35
# bind36	= numactl -m 4 --physcpubind=36
# bind37	= numactl -m 4 --physcpubind=37
# bind38	= numactl -m 4 --physcpubind=38
# bind39	= numactl -m 4 --physcpubind=39
#
# bind40	= numactl -m 5 --physcpubind=40
# bind41	= numactl -m 5 --physcpubind=41
# bind42	= numactl -m 5 --physcpubind=42
# bind43	= numactl -m 5 --physcpubind=43
# bind44	= numactl -m 5 --physcpubind=44
# bind45	= numactl -m 5 --physcpubind=45
# bind46	= numactl -m 5 --physcpubind=46
# bind47	= numactl -m 5 --physcpubind=47
#
# bind48	= numactl -m 6 --physcpubind=48
# bind49	= numactl -m 6 --physcpubind=49
# bind50	= numactl -m 6 --physcpubind=50
# bind51	= numactl -m 6 --physcpubind=51
# bind52	= numactl -m 6 --physcpubind=52
# bind53	= numactl -m 6 --physcpubind=53
# bind54	= numactl -m 6 --physcpubind=54
# bind55	= numactl -m 6 --physcpubind=55
#
# bind56	= numactl -m 7 --physcpubind=56
# bind57	= numactl -m 7 --physcpubind=57
# bind58	= numactl -m 7 --physcpubind=58
# bind59	= numactl -m 7 --physcpubind=59
# bind60	= numactl -m 7 --physcpubind=60
# bind61	= numactl -m 7 --physcpubind=61
# bind62	= numactl -m 7 --physcpubind=62
# bind63	= numactl -m 7 --physcpubind=63


#------- Compilers ------------------------------------------------------------
default:
#                                      EDIT paths to LLVM and libraries:
    BASE_DIR           = /usr/lib/llvm-6.0
    # LLVM_PATH specifies the directory path containing required LLVM files and
    # potentially multiple LLVM versions.
    LLVM_PATH          = $[BASE_DIR]
    # LLVM_ROOT_PATH specifies the directory path to the LLVM version to be
    # used. EDIT: Change llvm-v390 to appropriate directory name.
    LLVM_ROOT_PATH     = $[LLVM_PATH]
    LLVM_BIN_PATH      = $[LLVM_ROOT_PATH]/bin
    LLVM_LIB_PATH      = $[LLVM_ROOT_PATH]/lib
    LLVM_INCLUDE_PATH  = $[LLVM_ROOT_PATH]/include
    DRAGONEGG_PATH     = $[LLVM_PATH]/dragonegg
    DRAGONEGG_SPECS    = $[DRAGONEGG_PATH]/integrated-as.specs
    # DragonEgg version 3.5.2 requires GCC version 4.8.2.
    # EDIT LLVM_GCC_DIR to reflect the GCC path.
    LLVM_GCC_DIR       = $[LLVM_PATH]/gcc-4.8.2
    GFORTRAN_DIR       = $[LLVM_GCC_DIR]/bin
    # Specify Intel OpenMP library path.
    OPENMP_DIR         = $[BASE_DIR]/lib/libomp_oss/exports
   
    preENV_PATH             = $[LLVM_BIN_PATH]:%{ENV_PATH}

    CC                  = /usr/bin/clang %{model}
    CXX                 = /usr/bin/clang++ %{model}
    FORTRAN_COMP        = $(GFORTRAN_DIR)/gfortran
    FC                  = $(FORTRAN_COMP) %{model}
    CLD                 = /usr/bin/clang %{model}
    FLD                 = /usr/bin/clang %{model}
    # How to say "Show me your version, please"
    CC_VERSION_OPTION   = -v
    CXX_VERSION_OPTION  = -v
    FC_VERSION_OPTION   = -v

default:
%if %{bits} == 64
   sw_base_ptrsize = 64-bit
   sw_peak_ptrsize = 64-bit
%else
   sw_base_ptrsize = 32-bit
   sw_peak_ptrsize = 32-bit
%endif

intrate,intspeed:                     # 502.gcc_r and 602.gcc_s may need the 
%if %{bits} == 32                     # flags from this section.  For 'base',
    EXTRA_COPTIMIZE = -fgnu89-inline  # all benchmarks must use the same 
%else                                 # options, so we add them to all of 
    LDCFLAGS        = -z muldefs      # integer rate and integer speed.  See:
%endif                                # www.spec.org/cpu2017/Docs/benchmarks/502.gcc_r.html

#--------- Portability --------------------------------------------------------
default:# data model applies to all benchmarks
%if %{bits} == 32
    # Strongly recommended because at run-time, operations using modern file 
    # systems may fail spectacularly and frequently (or, worse, quietly and 
    # randomly) if a program does not accommodate 64-bit metadata.
    EXTRA_PORTABILITY = -D_FILE_OFFSET_BITS=64
%else
    EXTRA_PORTABILITY = -DSPEC_LP64
%endif

# Benchmark-specific portability (ordered by last 2 digits of bmark number)

500.perlbench_r,600.perlbench_s:  #lang='C'
%if %{bits} == 32
%   define suffix IA32
%else
%   define suffix X64
%endif
   PORTABILITY    = -DSPEC_%{os}_%{suffix} 

521.wrf_r,621.wrf_s:  #lang='F,C'
   CPORTABILITY  = -DSPEC_CASE_FLAG 
   FPORTABILITY  = -fconvert=big-endian 

523.xalancbmk_r,623.xalancbmk_s:  #lang='CXX'
   PORTABILITY   = -DSPEC_%{os}

526.blender_r:  #lang='CXX,C'
    CPORTABILITY = -funsigned-char 
    CXXPORTABILITY = -D__BOOL_DEFINED 

527.cam4_r,627.cam4_s:  #lang='F,C'
   PORTABILITY   = -DSPEC_CASE_FLAG

628.pop2_s:  #lang='F,C'
    CPORTABILITY = -DSPEC_CASE_FLAG
    FPORTABILITY = -fconvert=big-endian 

#--------  Baseline Tuning Flags ----------------------------------------------
default=base:
    COPTIMIZE     = -O3 -mavx
    CXXOPTIMIZE   = -O3 -mavx
    FOPTIMIZE     = -O3 -mavx -funroll-loops
    EXTRA_FFLAGS  = -fplugin=$(DRAGONEGG_PATH)/dragonegg.so
    EXTRA_FLIBS   = -lgfortran -lm
    LDOPTIMIZE    = -z muldefs
intrate,fprate:
    preENV_LIBRARY_PATH     = $[LLVM_LIB_PATH]
    preENV_LD_LIBRARY_PATH  = $[LLVM_LIB_PATH]
   #preENV_LIBRARY_PATH     = $[LLVM_LIB_PATH]:%{ENV_LIBRARY_PATH}
   #preENV_LD_LIBRARY_PATH  = $[LLVM_LIB_PATH]:%{ENV_LD_LIBRARY_PATH}

#
# Speed (OpenMP and Autopar allowed)
#
%if %{bits} == 32
   intspeed,fpspeed:
   #
   # Many of the speed benchmarks (6nn.benchmark_s) do not fit in 32 bits
   # If you wish to run SPECint2017_speed or SPECfp2017_speed, please use
   #
   #     runcpu --define bits=64
   #
   fail_build = 1
%else
   intspeed,fpspeed:
       OPENMP_LIB_PATH          = $[OPENMP_DIR]/lin_32e/lib
       EXTRA_OPTIMIZE           = -DSPEC_OPENMP -fopenmp -Wno-return-type -DUSE_OPENMP -I $(OPENMP_DIR)/common/include
       EXTRA_LIBS               = -fopenmp=libomp -L$(OPENMP_LIB_PATH) -lomp
       EXTRA_FLIBS              = -fopenmp=libomp -lgfortran -lm
       preENV_LIBRARY_PATH      = $[LLVM_LIB_PATH]:$[OPENMP_LIB_PATH]
       preENV_LD_LIBRARY_PATH   = $[LLVM_LIB_PATH]:$[OPENMP_LIB_PATH]
      #preENV_LIBRARY_PATH      = $[LLVM_LIB_PATH]:$[OPENMP_LIB_PATH]:%{ENV_LIBRARY_PATH}
      #preENV_LD_LIBRARY_PATH   = $[LLVM_LIB_PATH]:$[OPENMP_LIB_PATH]:%{ENV_LD_LIBRARY_PATH}
       preENV_OMP_THREAD_LIMIT  = %{cputhreads}
       preENV_OMP_STACKSIZE     = 128M
       preENV_GOMP_CPU_AFFINITY = 0-%{cputhreads}
%endif

#--------  Peak Tuning Flags ----------------------------------------------
default=peak:
    COPTIMIZE     = -Ofast -mavx 
    CXXOPTIMIZE   = -O3 -mavx 
    EXTRA_FLIBS   = -lgfortran -lm
    FOPTIMIZE     = -Ofast -mavx -funroll-loops -fno-stack-arrays
    EXTRA_FFLAGS  = -fplugin=$(DRAGONEGG_PATH)/dragonegg.so

502.gcc_r,602.gcc_s=peak:  #lang='C'                        
    LDOPTIMIZE    = -z muldefs    

521.wrf_r,621.wrf_s=peak:  #lang='F,C'                      
    COPTIMIZE     = -O3 -freciprocal-math -ffp-contract=fast -mavx
    EXTRA_FLIBS   = -lgfortran -lm
    FOPTIMIZE     = -O3 -freciprocal-math -ffp-contract=fast -mavx -funroll-loops
    EXTRA_FFLAGS  = -fplugin=$(DRAGONEGG_PATH)/dragonegg.so

523.xalancbmk_r,623.xalancbmk_s=peak:  #lang='CXX           
    CXXOPTIMIZE   = -O3 -mavx

#------------------------------------------------------------------------------
# Tester and System Descriptions - EDIT all sections below this point              
#------------------------------------------------------------------------------
#   For info about any field, see
#             https://www.spec.org/cpu2017/Docs/config.html#fieldname
#   Example:  https://www.spec.org/cpu2017/Docs/config.html#hw_memory
#-------------------------------------------------------------------------------

#--------- EDIT to match your version -----------------------------------------
default:
   sw_compiler001   = C/C++: Version 3.9.0 of Clang, the
   sw_compiler002   = LLVM Compiler Infrastructure 
   sw_compiler003   = Fortran: Version 4.8.2 of GCC, the
   sw_compiler004   = GNU Compiler Collection   
   sw_compiler005   = DragonEgg: Version 3.5.2, the
   sw_compiler006   = LLVM Compiler Infrastructure
#--------- EDIT info about you ------------------------------------------------
# To understand the difference between hw_vendor/sponsor/tester, see:
#     https://www.spec.org/cpu2017/Docs/config.html#test_sponsor
intrate,intspeed,fprate,fpspeed: # Important: keep this line
   hw_vendor          = My Corporation
   tester             = My Corporation
   test_sponsor       = My Corporation
   license_num        = nnn (Your SPEC license number)
#  prepared_by        = # Ima Pseudonym                       # Whatever you like: is never output


#--------- EDIT system availability dates -------------------------------------
intrate,intspeed,fprate,fpspeed: # Important: keep this line
                        # Example                             # Brief info about field
   hw_avail           = # Nov-2099                            # Date of LAST hardware component to ship
   sw_avail           = # Nov-2099                            # Date of LAST software component to ship

#--------- EDIT system information --------------------------------------------
intrate,intspeed,fprate,fpspeed: # Important: keep this line
                        # Example                             # Brief info about field
 # hw_cpu_name        = # Intel Xeon E9-9999 v9               # chip name
   hw_cpu_nominal_mhz = # 9999                                # Nominal chip frequency, in MHz
   hw_cpu_max_mhz     = # 9999                                # Max chip frequency, in MHz
 # hw_disk            = # 9 x 9 TB SATA III 9999 RPM          # Size, type, other perf-relevant info
   hw_model           = # TurboBlaster 3000                   # system model name
 # hw_nchips          = # 99                                  # number chips enabled
   hw_ncores          = # 9999                                # number cores enabled
   hw_ncpuorder       = # 1-9 chips                           # Ordering options
   hw_nthreadspercore = # 9                                   # number threads enabled per core
   hw_other           = # TurboNUMA Router 10 Gb              # Other perf-relevant hw, or "None"

#  hw_memory001       = # 999 GB (99 x 9 GB 2Rx4 PC4-2133P-R, # The 'PCn-etc' is from the JEDEC 
#  hw_memory002       = # running at 1600 MHz)                # label on the DIMM.

   hw_pcache          = # 99 KB I + 99 KB D on chip per core  # Primary cache size, type, location
   hw_scache          = # 99 KB I+D on chip per 9 cores       # Second cache or "None"
   hw_tcache          = # 9 MB I+D on chip per chip           # Third  cache or "None"
   hw_ocache          = # 9 GB I+D off chip per system board  # Other cache or "None"

   fw_bios            = # American Megatrends 39030100 02/29/2016 # Firmware information
 # sw_file            = # ext99                               # File system
 # sw_os001           = # Linux Sailboat                      # Operating system
 # sw_os002           = # Distribution 7.2 SP1                # and version
   sw_other           = # TurboHeap Library V8.1              # Other perf-relevant sw, or "None"
 # sw_state           = # Run level 99                        # Software state.

# Note: Some commented-out fields above are automatically set to preliminary 
# values by sysinfo
#       https://www.spec.org/cpu2017/Docs/config.html#sysinfo
# Uncomment lines for which you already know a better answer than sysinfo 

__HASH__
500.perlbench_r=base=test1-m64:
# Last updated 2019-04-08 14:40:18
opthash=f19fe4faa82fbe8696633f35996ab927585f05ce220bfc170e7d9487aa441c6a
baggage=
compiler_version=\
@eNqtkMtKxDAUhvd5irPURZOoQxziRolVBsSRaZltSZMYA2k65CJ9fAvKzEIQYbo6i/Pz/RcQotvX\
u2azfe22b+18OFJeBgufJiY3BmCYYlpdlb6EXK7hIkubyK5+qR+aumOUkncXpL9ErYzWZA7TmnVs\
VR1U5V0oU2VDQe1HNFLDMGrjORzG5Ca0CSlL741+dJEDKSmS3gX0NJagQcmgnZbZwLMQ4L6lMs95\
TlKCMfGuJ1Yp8mN6dCS3i4HwDaZLwdb/BZ3fa5lCfzRpjDcqG33esOKYYCg+u1nNAd/dD2x1Mvj1\
+QIke+Zo
compile_options=\
@eNrVUl1vmzAUfedXWLwTMm2qtKhUAscJ3gy2sJGyvViUOBMbH5FNqm6/voaElErp9jxLiOt7jn19\
z7lp13pN8UsdqlqB7thXXWtWjul1VfZSn9p9peWT0tXhd+B+cB0bGksJ3OXi8/LOdRxIE7YCrn8y\
2n+sWr+si/YH8Jq7T8ArgddNdy464K05Q9D+0jWK8q0NGMqIhDRDwMML++0r0/uY2qg8Fq0vqkZ5\
cZUpM2VikRCPFdoobVPqufe1soE5qlIX7d5euaZ5RJDkJOQx4nKoiEMSLC/VZZgLKnnOWIY4l5Sh\
NGEWkyTMtkhuMEH8uh12ktM8g2jIjVu62XAkZIQFD2yPAHj0o223eHoG53WpQ3Ca7+RupMzTbMjc\
m+6kS/XgOnAFIAxuyXfGaPSFMhG4b7R0HSs5ZPmGhFtusbe6jmiEUhjLK+G/F9p16KAGEzjB35Ft\
aVJ97JbRTIQRJlh8m+R4NWBkoJ3IQnmTxwaKZX99Z4yB9wc0p3qvDubs5MzwGXTT9/vu8acqe/Mw\
cOsGTOvVSwBGo8n6nSGgAwYnI6/l/qLHeGKGzM78Wyr7lCQUsU1FQ726ubyO5sMQzibwBW2uNYw=
exehash=1517643d2dbd40d2b1be0d8e5541808748a827379db115f9c4aff3b8487ae949

502.gcc_r=base=test1-m64:
# Last updated 2019-04-08 20:24:52
opthash=6df97b1db9e9a4de7fb1470014495a4494fa1eccfed4e87cdd95b3fa6c35469a
baggage=
compiler_version=\
@eNqtkMtKxDAUhvd5irPURZOoQxziRolVBsSRaZltSZMYA2k65CJ9fAvKzEIQYbo6i/Pz/RcQotvX\
u2azfe22b+18OFJeBgufJiY3BmCYYlpdlb6EXK7hIkubyK5+qR+aumOUkncXpL9ErYzWZA7TmnVs\
VR1U5V0oU2VDQe1HNFLDMGrjORzG5Ca0CSlL741+dJEDKSmS3gX0NJagQcmgnZbZwLMQ4L6lMs95\
TlKCMfGuJ1Yp8mN6dCS3i4HwDaZLwdb/BZ3fa5lCfzRpjDcqG33esOKYYCg+u1nNAd/dD2x1Mvj1\
+QIke+Zo
compile_options=\
@eNq1UV1vgjAUfedX3PQddR8umRETqKjdkDYCy7aXRhEXNqAbBbPt16+gOFzm3tak6U3O7bnnnOuK\
TE+XL9EmTiIQr0UsMjnQZJHHYcHzMlvHOd9Gebz5MNAZ0lQpVYuBep3rXh9pGqZzNgDULWXeXcVZ\
N0yW2RPo6dUl6CHoouHsCNDHHrOxetyxbQVT0Emnut04C5NyHdW1fI1C/iZFXuzbeb933pRm4FPu\
BYwtbM/jlNnunCmMuHyKK96ZeWdzTN0JmfIZAOj0QilZbt/h6OzZHKY0wlCKMg+jEdLwADA2fnOy\
w6h1Q5lvoCNbSFPuMQsmjjn1FHZssUYt28Uz3jT8q2ek0Uoo88mcPNpqWhNALcS+9xcmZ3ThmxZx\
iP/Q6K2jQJpD3NsTqwT9E9IyWUcbuYuwlewPCIZi9RyFhRxVWJJ+x34IDaBO1BmfSJtWGG4SO9D/\
4a7+0UJaf9SguenPuEOsii1J97NpUO2ytcgvGb/cWg==
exehash=821b1b08d1210ea761bcd00aceb45bb68c27f5776e5d1a73bf671842e4ef166a

505.mcf_r=base=test1-m64:
# Last updated 2019-04-08 20:58:16
opthash=b59b5fcad9859066a4e343c15883c4c1bde2c5bfe8664941ab3669f1b591892a
baggage=
compiler_version=\
@eNqtkMtKxDAUhvd5irPURZOoQxziRolVBsSRaZltSZMYA2k65CJ9fAvKzEIQYbo6i/Pz/RcQotvX\
u2azfe22b+18OFJeBgufJiY3BmCYYlpdlb6EXK7hIkubyK5+qR+aumOUkncXpL9ErYzWZA7TmnVs\
VR1U5V0oU2VDQe1HNFLDMGrjORzG5Ca0CSlL741+dJEDKSmS3gX0NJagQcmgnZbZwLMQ4L6lMs95\
TlKCMfGuJ1Yp8mN6dCS3i4HwDaZLwdb/BZ3fa5lCfzRpjDcqG33esOKYYCg+u1nNAd/dD2x1Mvj1\
+QIke+Zo
compile_options=\
@eNqNUVtvgjAUfu+vOOk76rJLMiMmUJmyAW0Ekm0vjSIubEAdBTP361dQHC5zWV/a5Dvnu9UTuZYt\
3uJ1ksYgNmUicjlEsiySqORFla+Sgm/jIlnvdHyBkXpKNaLjQe92cI0RItRlQ8D9Shb9ZZL3o3SR\
v4CW3VyBFoEmWs6eAG3iM4uoy5tYZjgF0Gy5iSP+LkVRHlBuhAHlfsjY3PJ9TpnluUxN0kvFudh+\
wMk57DhMqcFIiqqI4jFGZAiE6L952mPUvKcs0PGJQYxUDsLCO8eY+go7NdugpuWRGSftxD/dY0Rr\
TRbYrv1sqb02S8NpPQZzgzM6DwzTduzgqZVuUmHk2N7DmX5B+4SsSlfxWu7b6JT0A4KRWL7GUSnH\
NZZm3w0e8wM05TiTM8XRGjtmP9L/ka7Z6CCdHSXkGsGMO7ZZs6XZQZuG9bd0/uQLr/e/vw==
exehash=8eb3f5966ceebb156d3e8abc861a06b08030bec10a3242dbebb2cd1e3bb35a2d

525.x264_r=base=test1-m64:
# Last updated 2019-04-08 20:58:55
opthash=1ff2239d8a34310150133bc7c9a9c472d1db42708e3233255499fb16773cf649
baggage=
compiler_version=\
@eNqtkMtKxDAUhvd5irPURZOoQxziRolVBsSRaZltSZMYA2k65CJ9fAvKzEIQYbo6i/Pz/RcQotvX\
u2azfe22b+18OFJeBgufJiY3BmCYYlpdlb6EXK7hIkubyK5+qR+aumOUkncXpL9ErYzWZA7TmnVs\
VR1U5V0oU2VDQe1HNFLDMGrjORzG5Ca0CSlL741+dJEDKSmS3gX0NJagQcmgnZbZwLMQ4L6lMs95\
TlKCMfGuJ1Yp8mN6dCS3i4HwDaZLwdb/BZ3fa5lCfzRpjDcqG33esOKYYCg+u1nNAd/dD2x1Mvj1\
+QIke+Zo
compile_options=\
@eNrtU01TgzAQvedX7OSOVFurdsQZoFFRSjJ8zFgvmUqpgwJxCO1Uf70Bi1JHvXohFxLe7mbf2zxP\
FFq+eE5WaZaAeKlSUcgJklWZxhUv18UyLfkmKdPVq4EPMVJbqUIMPDg4GxxjhGw6YxPA+lqW+kNa\
6HG2KB5By8cj0GLQRFvzQIA2DRix1cebEiu6As3JlkksllyWsZ4WKtrZHo1H9bGz1ZNtVS5k908s\
8lwUu3rcjELKg4gxnwQBp4x4M7aHWfOQUH9KfGOwPTwajo7HJ6cAoNGh6nOx2cLe2mW6TDGAcynW\
ZZxcYGRPwLaNn3h+YNS6oSw08B5pjJQ2NosuXfMqUNi+AA1qEc++5m3APyqCEa1psNCZOfdE9dLK\
07RJ7kLf5Iz6oWk5rhPOWzaNUBi5jnf7yzMA7Q3ytSK2kh8Cd3T/BsG5eHhK4kpe1FiWfw3lU1KA\
Rm93+sssaI3ZrZ6f5f9g12R0kE6Oumhmhtfcday6Wpbv7qZRPenOmHsb9DbobdDboLdBbwOM3gFK\
M6xw
exehash=6c806b14379996538240b2fe5405ce3751ff03a1f147856b1486dda10ea94298

557.xz_r=base=test1-m64:
# Last updated 2019-04-08 20:59:04
opthash=578e088ea6fb8541316df57b58118ffde18bfd83559152243ca7cca44cf29f07
baggage=
compiler_version=\
@eNqtkMtKxDAUhvd5irPURZOoQxziRolVBsSRaZltSZMYA2k65CJ9fAvKzEIQYbo6i/Pz/RcQotvX\
u2azfe22b+18OFJeBgufJiY3BmCYYlpdlb6EXK7hIkubyK5+qR+aumOUkncXpL9ErYzWZA7TmnVs\
VR1U5V0oU2VDQe1HNFLDMGrjORzG5Ca0CSlL741+dJEDKSmS3gX0NJagQcmgnZbZwLMQ4L6lMs95\
TlKCMfGuJ1Yp8mN6dCS3i4HwDaZLwdb/BZ3fa5lCfzRpjDcqG33esOKYYCg+u1nNAd/dD2x1Mvj1\
+QIke+Zo
compile_options=\
@eNrtU91umzAYvecpLN+Tn7bL1qhUAuImbIAtfqa2NxZxnNUrxhEmVdenn6Elg23dEwwJ7MP5vg/5\
nEOsKlsWj3wvSg7UoRGq0ktLN7VgDa2P1U7U9InXYv/DgXNoma02JQ6cTS5nC2hZPo7IEsDpUdfT\
raimrCyqb8CWiwtgM2CrfuZEAXuVEuSbJV4hL1+/YermGabeXYZwskKJM3uen51ffFh8/GQKNu5X\
RH0c3wRrunHmfUuEIhrgHt3ej0alOSEJSlOKCYojAuxgYm594IxKLqlQLXoo7DOzMiWlqsymFNvy\
RRbT4iAGqH0M4B/V7IGzxwHWQh6MjL9e7HjZFKOBA1AbpThTO14DAGx8blQrnp7B6Ho7WEiMnuBK\
q2PN+DW0/CXwfedvqr9y2PuMSebAkQXQMk75JL8J3XVquLEdHeuh2N/QUcF/f3gNLdyKSrIgCu6R\
UaY3qxMN3WaJSwlOMtcLwiC7O0nX2gatMIi/vPOLAPsFyGO543v9avcgBb9R4Eptv3PW6OtRPk7u\
AtBZH67eiQVuOb+39jT7H0frOgbMoKf7EM7bhA3i9RMXfkxr
exehash=addd7a5c5de034d39f6371953f956333e58c89fc4cb6633e4ba8f1d7e6f405e8

