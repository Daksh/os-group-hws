#------------------------------------------------------------------------------
# SPEC CPU2017 config file for: gcc / g++ / gfortran on Linux x86
#------------------------------------------------------------------------------
#
# Usage: (1) Copy this to a new name
#             cd $SPEC/config
#             cp Example-x.cfg myname.cfg
#        (2) Change items that are marked 'EDIT' (search for it)
#
# SPEC tested this config file with:
#    Compiler version(s):    4.4.7, 4.9.2, 5.2.0, 6.3.0, 7.2.1, 8.1.0
#    Operating system(s):    Oracle Linux Server 6.5 and 7.4 /
#                            Red Hat Enterprise Linux Server 6.5 and 7.4
#    Hardware:               Xeon
#
# If your system differs, this config file might not work.
# You might find a better config file at http://www.spec.org/cpu2017/results
#
# Known Limitations with GCC 4
#
#   (1) Possible problem: compile time messages
#                             error: unrecognized command line option '...'
#      Recommendation:    Use a newer version of the compiler.
#                         If that is not possible, remove the unrecognized
#                         option from this config file.
#
#   (2) Possible problem: run time errors messages
#           527.cam4_r or 627.cam4_s    *** Miscompare of cam4_validate.txt
#      Recommendation: Use a newer version of the compiler.
#                      If that is not possible, try reducing the optimization.
#
#
# Compiler issues: Contact your compiler vendor, not SPEC.
# For SPEC help:   http://www.spec.org/cpu2017/Docs/techsupport.html
#------------------------------------------------------------------------------


#--------- Label --------------------------------------------------------------
# Arbitrary string to tag binaries (no spaces allowed)
#                  Two Suggestions: # (1) EDIT this label as you try new ideas.
%define label test1                # (2)      Use a label meaningful to *you*.


#--------- Preprocessor -------------------------------------------------------
%ifndef %{bits}                # EDIT to control 32 or 64 bit compilation.  Or,
%   define  bits        64     #      you can set it on the command line using:
%endif                         #      'runcpu --define bits=nn'

%ifndef %{build_ncpus}         # EDIT to adjust number of simultaneous compiles.
%   define  build_ncpus 1      #      Or, you can set it on the command line:
%endif                         #      'runcpu --define build_ncpus=nn'

# Don't change this part.
%define    os           LINUX
%if %{bits} == 64
%   define model        -m64
%elif %{bits} == 32
%   define model        -m32
%else
%   error Please define number of bits - see instructions in config file
%endif
%if %{label} =~ m/ /
%   error Your label "%{label}" contains spaces.  Please try underscores instead.
%endif
%if %{label} !~ m/^[a-zA-Z0-9._-]+$/
%   error Illegal character in label "%{label}".  Please use only alphanumerics, underscore, hyphen, and period.
%endif



#--------- Global Settings ----------------------------------------------------
# For info, see:
#            https://www.spec.org/cpu2017/Docs/config.html#fieldname
#   Example: https://www.spec.org/cpu2017/Docs/config.html#tune

command_add_redirect = 1
flagsurl             = $[top]/config/flags/gcc.xml
ignore_errors        = 1
iterations           = 1
label                = %{label}-m%{bits}
line_width           = 1020
log_line_width       = 1020
makeflags            = --jobs=%{build_ncpus}
mean_anyway          = 1
output_format        = txt,html,cfg,pdf,csv
preenv               = 1
reportable           = 0
tune                 = base


#--------- How Many CPUs? -----------------------------------------------------
# Both SPECrate and SPECspeed can test multiple chips / cores / hw threads
#    - For SPECrate,  you set the number of copies.
#    - For SPECspeed, you set the number of threads.
# See: https://www.spec.org/cpu2017/Docs/system-requirements.html#MultipleCPUs
#
#    q. How many should I set?
#    a. Unknown, you will have to try it and see!
#
# To get you started, some suggestions:
#
#     copies - This config file defaults to testing only 1 copy.   You might
#              try changing it to match the number of cores on your system,
#              or perhaps the number of virtual CPUs as reported by:
#                     grep -c processor /proc/cpuinfo
#              Be sure you have enough memory.  See:
#              https://www.spec.org/cpu2017/Docs/system-requirements.html#memory
#
#     threads - This config file sets a starting point.  You could try raising
#               it.  A higher thread count is much more likely to be useful for
#               fpspeed than for intspeed.
#
intrate,fprate:
   copies           = 1   # EDIT to change number of copies (see above)
intspeed,fpspeed:
   threads          = 4   # EDIT to change number of OpenMP threads (see above)


#------- Compilers ------------------------------------------------------------
default:
#  EDIT: The parent directory for your compiler.
#        Do not include the trailing /bin/
#        Do not include a trailing slash
#  Examples:
#   1  On a Red Hat system, you said
#      'yum install devtoolset-7'
#      Use:                 %   define gcc_dir /opt/rh/devtoolset-7/root/usr
#
#   2  You built GCC in:                       /disk1/mybuild/gcc-8.1.0/bin/gcc
#      Use:                 %   define gcc_dir /disk1/mybuild/gcc-8.1.0
#
#   3  You want:                               /usr/bin/gcc
#      Use:                 %   define gcc_dir /usr
#      WARNING: See section
#      "Known Limitations with GCC 4"
#
%ifndef %{gcc_dir}
%   define  gcc_dir        /usr/bin  # EDIT (see above)
%endif

# EDIT if needed: the preENV line adds library directories to the runtime
#      path.  You can adjust it, or add lines for other environment variables.
#      See: https://www.spec.org/cpu2017/Docs/config.html#preenv
#      and: https://gcc.gnu.org/onlinedocs/gcc/Environment-Variables.html
   preENV_LD_LIBRARY_PATH  = %{gcc_dir}/gcc
  #preENV_LD_LIBRARY_PATH  = %{gcc_dir}/lib64/:%{gcc_dir}/lib/:/lib64:%{ENV_LD_LIBRARY_PATH}
   SPECLANG                = %{gcc_dir}/
   CC                      = $(SPECLANG)gcc     -std=c99   %{model}
   CXX                     = $(SPECLANG)g++     -std=c++03 %{model}
   FC                      = $(SPECLANG)gfortran           %{model}
   # How to say "Show me your version, please"
   CC_VERSION_OPTION       = -v
   CXX_VERSION_OPTION      = -v
   FC_VERSION_OPTION       = -v

default:
%if %{bits} == 64
   sw_base_ptrsize = 64-bit
   sw_peak_ptrsize = 64-bit
%else
   sw_base_ptrsize = 32-bit
   sw_peak_ptrsize = 32-bit
%endif


#--------- Portability --------------------------------------------------------
default:               # data model applies to all benchmarks
%if %{bits} == 32
    # Strongly recommended because at run-time, operations using modern file
    # systems may fail spectacularly and frequently (or, worse, quietly and
    # randomly) if a program does not accommodate 64-bit metadata.
    EXTRA_PORTABILITY = -D_FILE_OFFSET_BITS=64
%else
    EXTRA_PORTABILITY = -DSPEC_LP64
%endif

# Benchmark-specific portability (ordered by last 2 digits of bmark number)

500.perlbench_r,600.perlbench_s:  #lang='C'
%if %{bits} == 32
%   define suffix IA32
%else
%   define suffix X64
%endif
   PORTABILITY    = -DSPEC_%{os}_%{suffix}

521.wrf_r,621.wrf_s:  #lang='F,C'
   CPORTABILITY  = -DSPEC_CASE_FLAG
   FPORTABILITY  = -fconvert=big-endian

523.xalancbmk_r,623.xalancbmk_s:  #lang='CXX'
   PORTABILITY   = -DSPEC_%{os}

526.blender_r:  #lang='CXX,C'
   PORTABILITY   = -funsigned-char -DSPEC_LINUX

527.cam4_r,627.cam4_s:  #lang='F,C'
   PORTABILITY   = -DSPEC_CASE_FLAG

628.pop2_s:  #lang='F,C'
   CPORTABILITY    = -DSPEC_CASE_FLAG
   FPORTABILITY    = -fconvert=big-endian


#-------- Tuning Flags common to Base and Peak --------------------------------

#
# Speed (OpenMP and Autopar allowed)
#
%if %{bits} == 32
   intspeed,fpspeed:
   #
   # Many of the speed benchmarks (6nn.benchmark_s) do not fit in 32 bits
   # If you wish to run SPECint2017_speed or SPECfp2017_speed, please use
   #
   #     runcpu --define bits=64
   #
   fail_build = 1
%else
   intspeed,fpspeed:
      EXTRA_OPTIMIZE = -fopenmp -DSPEC_OPENMP
   fpspeed:
      #
      # 627.cam4 needs a big stack; the preENV will apply it to all
      # benchmarks in the set, as required by the rules.
      #
      preENV_OMP_STACKSIZE = 120M
%endif


#--------  Baseline Tuning Flags ----------------------------------------------
#
# EDIT if needed -- Older GCC might not support some of the optimization
#                   switches here.  See also 'About the -fno switches' below.
#
default=base:         # flags for all base
   OPTIMIZE       = -g -O3 -march=native -fno-unsafe-math-optimizations  -fno-tree-loop-vectorize -Wall -pg -no-pie

intrate,intspeed=base: # flags for integer base
   EXTRA_COPTIMIZE = -fno-strict-aliasing -fgnu89-inline
# Notes about the above
#  - 500.perlbench_r/600.perlbench_s needs -fno-strict-aliasing.
#  - 502.gcc_r/602.gcc_s             needs -fgnu89-inline or -z muldefs
#  - For 'base', all benchmarks in a set must use the same options.
#  - Therefore, all base benchmarks get the above.  See:
#       www.spec.org/cpu2017/Docs/runrules.html#BaseFlags
#       www.spec.org/cpu2017/Docs/benchmarks/500.perlbench_r.html
#       www.spec.org/cpu2017/Docs/benchmarks/502.gcc_r.html


#--------  Peak Tuning Flags ----------------------------------------------
default=peak:
   basepeak = yes  # if you develop some peak tuning, remove this line.
   #
   # -----------------------
   # About the -fno switches
   # -----------------------
   #
   # For 'base', this config file (conservatively) disables some optimizations.
   # You might want to try turning some of them back on, by creating a 'peak'
   # section here, with individualized benchmark options:
   #
   #        500.perlbench_r=peak:
   #           OPTIMIZE = this
   #        502.gcc_r=peak:
   #           OPTIMIZE = that
   #        503.bwaves_r=peak:
   #           OPTIMIZE = other   .....(and so forth)
   #
   # If you try it:
   #   - You must remove the 'basepeak' option, above.
   #   - You will need time and patience, to diagnose and avoid any errors.
   #   - perlbench is unlikely to work with strict aliasing
   #   - Some floating point benchmarks may get wrong answers, depending on:
   #         the particular chip
   #         the version of GCC
   #         other optimizations enabled
   #         -m32 vs. -m64
   #   - See: http://www.spec.org/cpu2017/Docs/config.html
   #   - and: http://www.spec.org/cpu2017/Docs/runrules.html


#------------------------------------------------------------------------------
# Tester and System Descriptions - EDIT all sections below this point
#------------------------------------------------------------------------------
#   For info about any field, see
#             https://www.spec.org/cpu2017/Docs/config.html#fieldname
#   Example:  https://www.spec.org/cpu2017/Docs/config.html#hw_memory
#-------------------------------------------------------------------------------

#--------- EDIT to match your version -----------------------------------------
default:
   sw_compiler001   = C/C++/Fortran: Version 7.2.1 of GCC, the
   sw_compiler002   = GNU Compiler Collection

#--------- EDIT info about you ------------------------------------------------
# To understand the difference between hw_vendor/sponsor/tester, see:
#     https://www.spec.org/cpu2017/Docs/config.html#test_sponsor
intrate,intspeed,fprate,fpspeed: # Important: keep this line
   hw_vendor          = My Corporation
   tester             = My Corporation
   test_sponsor       = My Corporation
   license_num        = nnn (Your SPEC license number)
#  prepared_by        = # Ima Pseudonym                       # Whatever you like: is never output


#--------- EDIT system availability dates -------------------------------------
intrate,intspeed,fprate,fpspeed: # Important: keep this line
                        # Example                             # Brief info about field
   hw_avail           = # Nov-2099                            # Date of LAST hardware component to ship
   sw_avail           = # Nov-2099                            # Date of LAST software component to ship

#--------- EDIT system information --------------------------------------------
intrate,intspeed,fprate,fpspeed: # Important: keep this line
                        # Example                             # Brief info about field
#  hw_cpu_name        = # Intel Xeon E9-9999 v9               # chip name
   hw_cpu_nominal_mhz = # 9999                                # Nominal chip frequency, in MHz
   hw_cpu_max_mhz     = # 9999                                # Max chip frequency, in MHz
#  hw_disk            = # 9 x 9 TB SATA III 9999 RPM          # Size, type, other perf-relevant info
   hw_model           = # TurboBlaster 3000                   # system model name
#  hw_nchips          = # 99                                  # number chips enabled
   hw_ncores          = # 9999                                # number cores enabled
   hw_ncpuorder       = # 1-9 chips                           # Ordering options
   hw_nthreadspercore = # 9                                   # number threads enabled per core
   hw_other           = # TurboNUMA Router 10 Gb              # Other perf-relevant hw, or "None"

#  hw_memory001       = # 999 GB (99 x 9 GB 2Rx4 PC4-2133P-R, # The 'PCn-etc' is from the JEDEC
#  hw_memory002       = # running at 1600 MHz)                # label on the DIMM.

   hw_pcache          = # 99 KB I + 99 KB D on chip per core  # Primary cache size, type, location
   hw_scache          = # 99 KB I+D on chip per 9 cores       # Second cache or "None"
   hw_tcache          = # 9 MB I+D on chip per chip           # Third  cache or "None"
   hw_ocache          = # 9 GB I+D off chip per system board  # Other cache or "None"

   fw_bios            = # American Megatrends 39030100 02/29/2016 # Firmware information
#  sw_file            = # ext99                               # File system
#  sw_os001           = # Linux Sailboat                      # Operating system
#  sw_os002           = # Distribution 7.2 SP1                # and version
   sw_other           = # TurboHeap Library V8.1              # Other perf-relevant sw, or "None"
#  sw_state           = # Run level 99                        # Software state.

# Note: Some commented-out fields above are automatically set to preliminary
# values by sysinfo
#       https://www.spec.org/cpu2017/Docs/config.html#sysinfo
# Uncomment lines for which you already know a better answer than sysinfo

__HASH__
500.perlbench_r=base=test1-m64:
# Last updated 2019-04-08 08:26:09
opthash=1b55f44e78c515229834a282ce9d3013fee214077130f5cc6c8d469cce53274c
baggage=
compiler_version=\
@eNp9VE1v2kAQvftX+JZW8eIEIoiQfKDEiSqREBGnPaL17thsst519wNMD/3tXRuDXRL1grXzZt58\
vcGfz9c/4tXL9+XTevmcuM/Ue9VM5H5qGTeICV+XQPTAmy8Xi3ierB/m8yi0WoUpE2FOyAlYJMv1\
z9Xs+TleHRw4S2uHsLodr8c3iDNhK5QLG05CbiTaKVyWoLzl/f1iObtbJ7PVQ5ysn2aP8UsktqWp\
kJACzvG7+H72ukiiay/BKgcz9c/5vbkUGcutAurvmNlM/cEg1IqE5Gj30dZHqMZQ+Z5vQWkmRXTx\
mlphrD8ZjAZXaDixzfP6z/Xt4Orm4hiQWsfAo4xxmIZh06jeYAUhlaRuF03CVTy7e4wH32yuXRQI\
nHJAHIvc4hx0RAJMcUAuL4NcBqlieUCDTCqjsAhk+kbqH+RgF1sqyFjVjPOYv05R4DepUFs3koLv\
G1+ZK1wgbbM6Bk16tpbnfFKoK6/pgfbKZeIdFKpVQBGrAbdOqIBQpk7rbWuSthYK4ZYCRW4lBirT\
MZmNAkx1VErNqgPPGUfrKLg+Nqn3WklporBDCZcEc4hc2f0qU20oqSpEwS3mM8CwAqI9nKgpZNg6\
ZXceOGWRgF0XXE/GCvbLAnKrAFI3Q5lusK05fECxbP9PvqKsunfJbe5u5/Q+Zi0Z9Ho0UKDf3RyR\
aRR9hrQMtTLc8iNsjeyshSNlWJFNr8QdKCVPeqlBNBpGbHw7Ptlcx8X45vhsSFwy14U2UTEaBg4M\
imo0PEvUL9UKtwsQbg6kV2SWcYlp24junXFPKsRSjKhiboa99W6AvLv/nUgBB6xr/0Z7HzTrgI10\
ZX5iP2T9gHhJo0C/kBT41G906Lkz8tsDOhy8/+V/5//V9/4CbPLEfg==
compile_options=\
@eNrVU21r2zAQ/u5fIfxdccdGWUJdsB0l8eZEwrIh2xfhOkqqLZaD5IS1v34n56UtDFpGv1RgfLq3\
R3fP3aLVuKl+y7XaStTuOtVqO/JsZ1TdCbPXK2XEQRq1fgj9T74HogWX0L8aDK+ufc9L6JyNkB/s\
rQnulA42dY3cwbZbhfVw6MTm+gvCNcLtGWDQIjzmjCTwW4xJXE5BYCTPREJzgnA6gG+lbBekFKR6\
V+mgUI3EM5VLe9bMinmGWWWsNKCSf7rASBDsTtam0itIOaZlnBHBs4jPCBcOMY2y8OqELqKyoIKX\
jOWEc0EZWcwZ2EQW5VMiJmlG+OXqboLTMk+I0/VXOplwUog4LXgINSK8QZh+hoIrU9+HuurUAV60\
1i3ea1utJRi6e+ya0KjHqm8FOto7IyXetu0OH2TdtUY9SnQ6p7dm6aJciqWDOcUcScLVVlVWaYBe\
b/T+6xArvVVaPotkLujGtntTy1vfS0YoScJXKTs60vgbZUXov+DP94DzhJWTLJpysL3ksrfGZJHM\
xMXhw5Pre3SEoBPpPP1JoKL3ZLpvGKN5EcVplhY/zh194rxHJ8sij6CJT494fQr61MfAfwIwlxtg\
vr9lh4/Kd5/x/x3wm/buFySyt85/26DLwlzmFKF+iLPxW6b9g/IL9c2jYga5Yrdp2+ZUMi3d1j5b\
2b8rRMvz
exehash=6e923ca31e38717b1fae2387d43fec24baee90fdc40b5b17be035194bd4f1a6b

502.gcc_r=base=test1-m64:
# Last updated 2019-04-08 08:37:12
opthash=9de8cb8ba66c20ee11777c957028d95eedcffa9bf2f2995b061610c01a8881e6
baggage=
compiler_version=\
@eNp9VE1v2kAQvftX+JZW8eIEIoiQfKDEiSqREBGnPaL17thsst519wNMD/3tXRuDXRL1grXzZt58\
vcGfz9c/4tXL9+XTevmcuM/Ue9VM5H5qGTeICV+XQPTAmy8Xi3ierB/m8yi0WoUpE2FOyAlYJMv1\
z9Xs+TleHRw4S2uHsLodr8c3iDNhK5QLG05CbiTaKVyWoLzl/f1iObtbJ7PVQ5ysn2aP8UsktqWp\
kJACzvG7+H72ukiiay/BKgcz9c/5vbkUGcutAurvmNlM/cEg1IqE5Gj30dZHqMZQ+Z5vQWkmRXTx\
mlphrD8ZjAZXaDixzfP6z/Xt4Orm4hiQWsfAo4xxmIZh06jeYAUhlaRuF03CVTy7e4wH32yuXRQI\
nHJAHIvc4hx0RAJMcUAuL4NcBqlieUCDTCqjsAhk+kbqH+RgF1sqyFjVjPOYv05R4DepUFs3koLv\
G1+ZK1wgbbM6Bk16tpbnfFKoK6/pgfbKZeIdFKpVQBGrAbdOqIBQpk7rbWuSthYK4ZYCRW4lBirT\
MZmNAkx1VErNqgPPGUfrKLg+Nqn3WklporBDCZcEc4hc2f0qU20oqSpEwS3mM8CwAqI9nKgpZNg6\
ZXceOGWRgF0XXE/GCvbLAnKrAFI3Q5lusK05fECxbP9PvqKsunfJbe5u5/Q+Zi0Z9Ho0UKDf3RyR\
aRR9hrQMtTLc8iNsjeyshSNlWJFNr8QdKCVPeqlBNBpGbHw7Ptlcx8X45vhsSFwy14U2UTEaBg4M\
imo0PEvUL9UKtwsQbg6kV2SWcYlp24junXFPKsRSjKhiboa99W6AvLv/nUgBB6xr/0Z7HzTrgI10\
ZX5iP2T9gHhJo0C/kBT41G906Lkz8tsDOhy8/+V/5//V9/4CbPLEfg==
compile_options=\
@eNrNUl1vmzAUfedXWH53kn10WqJSCQhN2Ai2AkzbXizqmNQb2JkNkdZfPxuStX1qHlZplpCvuOf6\
HB+fTEnUVj95LRoO1KETSpqFZzotWEd1L3dC0yPXov7twzfQs6WxEB/OJvPZFfS8CG/IAsBpb/T0\
TsjpnjHgFjLdzmfzuSvbD+8BYgCpM8FEAbTMSRzZLVvGYbkCKJm4byoka/odH2pz4Iz+Mkp3Jzi9\
mr09l0FZYJqXhGzjPKeYxNmG2F6S0VXkzl0HX2Ia4ew2WdG1FbEHCL+zWirN7n1ZdeJoSWqpUC9N\
VXPb6O6R09eKh2pQCcZ+pzlHjVIHdOSsU1o8cPBkDZjRL1Q1ojJCWqp6L/uPcyRkI6SDn0SnxFoB\
ro3qNeM30IsWIIr8F90bgTj8hEnhw2dWQs/aH5HyNg1Wue09t3XohnEWrekZ8Ko+Qw8vgBWZbJLv\
sSX7l6YPZ8dfi21g6R4pXrZ/MGEcJHhbBGGSJsW3s1fDm0AvTbLPl+R4/PkqYbokSdfq7ocdNDcO\
37SPs38DAcCQlnR5Saz+y9ey6jdBsaZpErrANu3pQrh04X+S/D+ZlHLQ
exehash=9cede4a7825d50ff2f15ba78b0cf55f542742b4acfc01e06a2e1bfb8720c94c6

505.mcf_r=base=test1-m64:
# Last updated 2019-04-08 08:37:15
opthash=69d4ea9e3e533f460d35ca2d40db467e0491d5a6c7057f368d7b8a2a7b665aac
baggage=
compiler_version=\
@eNp9VE1v2kAQvftX+JZW8eIEIoiQfKDEiSqREBGnPaL17thsst519wNMD/3tXRuDXRL1grXzZt58\
vcGfz9c/4tXL9+XTevmcuM/Ue9VM5H5qGTeICV+XQPTAmy8Xi3ierB/m8yi0WoUpE2FOyAlYJMv1\
z9Xs+TleHRw4S2uHsLodr8c3iDNhK5QLG05CbiTaKVyWoLzl/f1iObtbJ7PVQ5ysn2aP8UsktqWp\
kJACzvG7+H72ukiiay/BKgcz9c/5vbkUGcutAurvmNlM/cEg1IqE5Gj30dZHqMZQ+Z5vQWkmRXTx\
mlphrD8ZjAZXaDixzfP6z/Xt4Orm4hiQWsfAo4xxmIZh06jeYAUhlaRuF03CVTy7e4wH32yuXRQI\
nHJAHIvc4hx0RAJMcUAuL4NcBqlieUCDTCqjsAhk+kbqH+RgF1sqyFjVjPOYv05R4DepUFs3koLv\
G1+ZK1wgbbM6Bk16tpbnfFKoK6/pgfbKZeIdFKpVQBGrAbdOqIBQpk7rbWuSthYK4ZYCRW4lBirT\
MZmNAkx1VErNqgPPGUfrKLg+Nqn3WklporBDCZcEc4hc2f0qU20oqSpEwS3mM8CwAqI9nKgpZNg6\
ZXceOGWRgF0XXE/GCvbLAnKrAFI3Q5lusK05fECxbP9PvqKsunfJbe5u5/Q+Zi0Z9Ho0UKDf3RyR\
aRR9hrQMtTLc8iNsjeyshSNlWJFNr8QdKCVPeqlBNBpGbHw7Ptlcx8X45vhsSFwy14U2UTEaBg4M\
imo0PEvUL9UKtwsQbg6kV2SWcYlp24junXFPKsRSjKhiboa99W6AvLv/nUgBB6xr/0Z7HzTrgI10\
ZX5iP2T9gHhJo0C/kBT41G906Lkz8tsDOhy8/+V/5//V9/4CbPLEfg==
compile_options=\
@eNrNUkFv2yAYvftXIO40rbZVS1RXsonbenMMim2p2wW5FKdsNmSAI62/fthO2vTUHDZpXEB87+Px\
3vdyrVBX/xSNbAXQWye1sovAOiO5Y6ZXj9KwnTCy+R3CCxj4o/WQEJ6fzc8/wSDAZEUXAM56a2YP\
Us02nINhIeseQz6fD8fu8iNAHCB9IDjTAC0LmmC/5cskrm49KrVbwdkvq43bV1lUlYQVFaXrpCgY\
oUm+ogBtACIf/Ku14U+hqp3cCYAapVGvbN0IX3BPaGDq5HM98oGp7owQqNV6i3aCO23kswBHa8RM\
ylHdytpK5amajeo/z5FUrVQDfP+1jHpR4Mrq3nBxDQO8ABiH7/owAUn8hdAyhG9MgYE3EtPqJotu\
C197a9BYjZMc3zF8QJzoGAzIAni+dJV+T3zb3/RvfDu5L9cRw0cU7zs56pkaKVmXUZxmafntIHu0\
FwZZmn89JVzT5T/JxSmhuNIPP3yjvR7wbffa+zJbAMbBZ8tTEvJfTsv/fhWVdyxL4yF6bbcXRKoh\
x0ch/gMaTVY1
exehash=587606e33ee3969dd50b2d61e71a68176082bf206f024607f822f3db2c97698b

525.x264_r=base=test1-m64:
# Last updated 2019-04-08 08:38:26
opthash=6e27f9a1c46afa1a1371da79deb0fb51ea94612bae6a1f08b3d3c375d926d477
baggage=
compiler_version=\
@eNp9VE1v2kAQvftX+JZW8eIEIoiQfKDEiSqREBGnPaL17thsst519wNMD/3tXRuDXRL1grXzZt58\
vcGfz9c/4tXL9+XTevmcuM/Ue9VM5H5qGTeICV+XQPTAmy8Xi3ierB/m8yi0WoUpE2FOyAlYJMv1\
z9Xs+TleHRw4S2uHsLodr8c3iDNhK5QLG05CbiTaKVyWoLzl/f1iObtbJ7PVQ5ysn2aP8UsktqWp\
kJACzvG7+H72ukiiay/BKgcz9c/5vbkUGcutAurvmNlM/cEg1IqE5Gj30dZHqMZQ+Z5vQWkmRXTx\
mlphrD8ZjAZXaDixzfP6z/Xt4Orm4hiQWsfAo4xxmIZh06jeYAUhlaRuF03CVTy7e4wH32yuXRQI\
nHJAHIvc4hx0RAJMcUAuL4NcBqlieUCDTCqjsAhk+kbqH+RgF1sqyFjVjPOYv05R4DepUFs3koLv\
G1+ZK1wgbbM6Bk16tpbnfFKoK6/pgfbKZeIdFKpVQBGrAbdOqIBQpk7rbWuSthYK4ZYCRW4lBirT\
MZmNAkx1VErNqgPPGUfrKLg+Nqn3WklporBDCZcEc4hc2f0qU20oqSpEwS3mM8CwAqI9nKgpZNg6\
ZXceOGWRgF0XXE/GCvbLAnKrAFI3Q5lusK05fECxbP9PvqKsunfJbe5u5/Q+Zi0Z9Ho0UKDf3RyR\
aRR9hrQMtTLc8iNsjeyshSNlWJFNr8QdKCVPeqlBNBpGbHw7Ptlcx8X45vhsSFwy14U2UTEaBg4M\
imo0PEvUL9UKtwsQbg6kV2SWcYlp24junXFPKsRSjKhiboa99W6AvLv/nUgBB6xr/0Z7HzTrgI10\
ZX5iP2T9gHhJo0C/kBT41G906Lkz8tsDOhy8/+V/5//V9/4CbPLEfg==
compile_options=\
@eNrtVE1zmzAQvfMrNLorOInjxp6QGcA0ocXA8DHT9MIQWThqQcpI4HHy6yvAbvApPiTTHtCFRftW\
2n27ej5nqMp/k4KWBPDnmnImF5qsBcV1Jhq2piLbEkGLFwOeQ02ZUkEMODmbT66gptnBKlwAqDdS\
6I+U6RuMQbuQrNcGns9bs5pNAcIA8cMFZxygZRw6tvr4S8dK7wByyzXBfJ1JgXXKFNrdXcym7e/A\
1MmuFrkc7mBeVZztz8vMNAmyOA3DyInjLAgdfxUe+ayHxAmipRMZk935xeX0avblWqW4ASi4VJnm\
Aj8ZLK/plgBUMI4aJvOCKEf9hNrsK/qadzWA3l8LQlDJ+TPaElxzQV8JGKwO07OJ8pLmkjJ1VbFh\
zfUcUVZS1sL3CXqhIgrcSN4ITG6hZi+AbRvvctsDA+tbECYGPCIaaqo5dph+9cy7WPmOSe+8luPb\
99kB8A+7ALVgAVQJ7sr96ahUPrIl3dnOjyQyM3twxfvN6SjqA8MgSkzL9dzk4cBk1zGoea7//ZQ3\
0G9+yqidMmc3/PGXCpS3Lb6s3mL/jgsA3Sx5y1OG7r/slsp+ZSb3meda7TiX1b6gIG2fxuBdjMI1\
CtcoXKNwjcI1CtcoXKNwjcL12cL1B352b8M=
exehash=8dca35256365ed0ab0f93fa246d9ae341799d511f269172e601dc0f13ffec0d3

557.xz_r=base=test1-m64:
# Last updated 2019-04-08 08:38:50
opthash=72238f82d78c46f4c4f32dbf8575467aae6c1e3ef1e8e0a4d9b6702aed52c164
baggage=
compiler_version=\
@eNp9VE1v2kAQvftX+JZW8eIEIoiQfKDEiSqREBGnPaL17thsst519wNMD/3tXRuDXRL1grXzZt58\
vcGfz9c/4tXL9+XTevmcuM/Ue9VM5H5qGTeICV+XQPTAmy8Xi3ierB/m8yi0WoUpE2FOyAlYJMv1\
z9Xs+TleHRw4S2uHsLodr8c3iDNhK5QLG05CbiTaKVyWoLzl/f1iObtbJ7PVQ5ysn2aP8UsktqWp\
kJACzvG7+H72ukiiay/BKgcz9c/5vbkUGcutAurvmNlM/cEg1IqE5Gj30dZHqMZQ+Z5vQWkmRXTx\
mlphrD8ZjAZXaDixzfP6z/Xt4Orm4hiQWsfAo4xxmIZh06jeYAUhlaRuF03CVTy7e4wH32yuXRQI\
nHJAHIvc4hx0RAJMcUAuL4NcBqlieUCDTCqjsAhk+kbqH+RgF1sqyFjVjPOYv05R4DepUFs3koLv\
G1+ZK1wgbbM6Bk16tpbnfFKoK6/pgfbKZeIdFKpVQBGrAbdOqIBQpk7rbWuSthYK4ZYCRW4lBirT\
MZmNAkx1VErNqgPPGUfrKLg+Nqn3WklporBDCZcEc4hc2f0qU20oqSpEwS3mM8CwAqI9nKgpZNg6\
ZXceOGWRgF0XXE/GCvbLAnKrAFI3Q5lusK05fECxbP9PvqKsunfJbe5u5/Q+Zi0Z9Ho0UKDf3RyR\
aRR9hrQMtTLc8iNsjeyshSNlWJFNr8QdKCVPeqlBNBpGbHw7Ptlcx8X45vhsSFwy14U2UTEaBg4M\
imo0PEvUL9UKtwsQbg6kV2SWcYlp24junXFPKsRSjKhiboa99W6AvLv/nUgBB6xr/0Z7HzTrgI10\
ZX5iP2T9gHhJo0C/kBT41G906Lkz8tsDOhy8/+V/5//V9/4CbPLEfg==
compile_options=\
@eNrtVF1v2jAUfc+vsPJuPtqOFdRUguBCNogjEqa2L5YxBrwmNrID2vj1c5LSJtpDedikPcxSYh/f\
6+vonHMTKgkz+sI3IuVA7XOhpBk4JteC5UQf5FpocuRabH56btd17NLYFM/ttPqdnus4Pp5HA+C2\
D0a3V0K2t4yBYkCTrz3W7xfLrHcDIANQnS9oKQDHcYR8O4VjNFpOXjEZLhNMRk8JwosxWnidH92r\
65tPvc+3NmE6/IaIj8OHYEKmXvd8ZI7mJMBn9PjcKBUvo2iB4pjgCIXzCMCgZR+z54xkPCNCFWhH\
4ZWdmcoyJe0iFav0lNE23YsaKl41+Fs223H2UsNGZHvL6fvGmqc5bRSsAU3lljO15toStgUQX1ve\
qGY7T9JcHG2djVTwIA3dcBvId7DgMhMnWjIKqniuOYepUnt45CxXWpw4qI0yp9IW0lRQI6S9arOV\
h9s+FDIVskh/5W8WWdnAnVEHzfi96/gD4Pveh0pXiXj0BUeJ5zZkdx1rFT9aPsyGk9jGmhYooyMU\
+lPSSPjvCa5dBw+AJTSYB8/IEvMnDVLWRo/JYmiJfL/iY6uUglUHI7xIhqNgFiRPb7IV/nGdWRB+\
veT/UG3+FeNf4vo7tfpuD5r7Rru8OReA0taz8SX+/yelKr8eL4uWrPXjL5DY4tI=
exehash=fde98d7b85d6aee745b88d93b129f62417fabcc118f13dc99878a653e194958d

